# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- task: NodeTool@0
  inputs:
    versionSpec: '10.x'
  displayName: 'Install Node.js'

- script: |
    npm install
    npm run build
  displayName: 'npm install and build'

- script: |
    pwd
    ls
    cd ..
    mkdir "sdks"
    pushd "sdks"
    git clone https://github.com/PlayFab/CSharpSDK.git
    popd
  displayName: 'Cloning CSharpSDK'

- script: |
    ls
    cd s
    cd SDKBuildScripts/Windows
    ./csharp_build.bat
  displayName: 'generating CSharpSDK'
 
- script: |
    cd ../sdks/CSharpSDK/PlayFabSDK/
    pwd
    ls
  displayName: 'testing csharp'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '../sdks/CSharpSDK/PlayFabSDK/PlayFabSDK+Unit.sln'
    feedsToUse: 'select'

- task: VSBuild@1
  inputs:
    solution: '../sdks/CSharpSDK/PlayFabSDK/PlayFabSDK+Unit.sln'
    configuration: 'Release'
    clean: true
    msbuildArchitecture: 'x64'

- task: DotNetCoreCLI@2
  inputs:
    command: 'run'
    projects: '../sdks/$SdkName/PlayFabSDK/UnittestRunner/bin/Release/netcoreapp2.0/UnittestRunner.dll'
    arguments: '-testInputsFile SYNCJENKINSADDTESTTITLEDATAJSON'
